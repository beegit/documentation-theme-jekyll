# Site settings
title: Basic Project
tagline: a basic project to show how you might output to multiple sites
email: tomjohnson1492@gmail.com
description: > # this means to ignore newlines until "baseurl:"
  This is just a basic project that shows how you might be outputting to multiple sites from the same Jekyll source.
baseurl: "/basicproject # the subpath of your site, e.g. /blog/
url: "http://tomjohnson1492.github.io" # the base hostname & protocol for your site
twitter_username: tomjohnson
github_username:  tomjohnson1492
host: 127.0.0.1 # specified here because 0.0.0 gets defaulted to search in Chrome.
port: 4001 # specified here in case you have multiple sites and want to view them simultaneously (you'll need different ports)


## single sourcing toggles: here you set some variables that will be used as toggles for single sourcing projects. If you just have one site, you can probably ignore these two fields. 
# But the theme is designed to generate multiple outputs from the same theme -- this is the paradigm of single sourcing that is common to the tech writer's world but which isn't so
# common in the Jekyll world.


project: basicproject
audience: web

google-analytics-tracking-code: 

## build settings

markdown: redcarpet

redcarpet:
  extensions: ["no_intra_emphasis", "fenced_code_blocks", "autolink", "tables", "with_toc_data"]
highlighter: pygments

exclude: # put all files or directories that you want to exclude from your project here.
  - "Gemfile"
  - "Gemfile.lock"

# these are defaults that get applied to each page or post. you don't have to set these settings in the frontmatter if you put them here. But frontmatter settings will override the configs here.
permalink: :title
defaults:
  -
    scope:
      path: ""
      type: "pages"
    values:
      layout: "page"
      comments: true
  -
    scope:
      path: ""
      type: "posts"
    values:
      layout: "post"
      comments: true

sass:
    sass_dir: _sass

# if you had a collection (your own post types separate from pages or posts), you could add them like this here. then you create a folder called _bikes to put the content.
#collections:
#  bikes:
#    output: true
#    layout: bike_layout

